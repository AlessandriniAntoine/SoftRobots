import Sofa
from math import sin,cos

# Units : mm and kg

def createScene(rootNode):

                rootNode.createObject('RequiredPlugin', name='BeamAdapter')
                rootNode.createObject('RequiredPlugin', name='SofaPython')
                rootNode.createObject('RequiredPlugin', name='SofaSparseSolver')

                rootNode.createObject('VisualStyle', displayFlags='showVisualModels showBehaviorModels showCollisionModels hideBoundingCollisionModels showForceFields showInteractionForceFields hideWireframe')
                rootNode.dt = 0.001;
                rootNode.gravity = [0., 0., -9810];
                rootNode.createObject('BackgroundSetting', color=[0, 0.168627, 0.211765, 1])
                rootNode.createObject('OglSceneFrame', style="Arrows", alignment="TopRight")

                ##### Compute the beam topology using python
                length = 100
                nbEdges = 10
                edgesList = []
                for i in range(0,nbEdges):
                    edgesList.append([i, i+1])

                positionsList = []
                for i in range(0,nbEdges+1):
                    dx = length/(nbEdges+1)
                    positionsList.append([dx*i,0,0,0,0,0,1])

                ##### Beam model
                beam = rootNode.createChild('beam')
                beam.createObject('EulerImplicitSolver')
                beam.createObject('SparseLDLSolver')
                beam.createObject('MeshTopology', edges=edgesList)
                beam.createObject('MechanicalObject', template="Rigid3", position=positionsList, name='frame')
                beam.createObject('BeamInterpolation', name='interpol', crossSectionShape='rectangular', lengthY=5, lengthZ=5, defaultYoungModulus=1.8e6)
                beam.createObject('AdaptiveBeamForceFieldAndMass',  name="BeamForceField", computeMass=1, massDensity=0.001)
                beam.createObject('RestShapeSpringsForceField', points=0, stiffness=100e10,  angularStiffness=100e10)

                ##### Visualization
                visuNode = beam.createChild('visualization')
                visuNode.createObject('RegularGridTopology', name='topology', n=[20, 5, 5] , min=[0, -2.5, -2.5], max=[100, 2.5, 2.5])
                visuNode.createObject('MechanicalObject', name='test', src='@topology')
                visuNode.createObject('AdaptiveBeamMapping', interpolation="@../interpol", input="@../frame", output="@test")

                oglNode = visuNode.createChild('ogl')
                oglNode.createObject('OglModel', color=[0, 1, 0, 1])
                oglNode.createObject('IdentityMapping')

                return rootNode
