import Sofa

import os
path = os.path.dirname(os.path.abspath(__file__))+'/mesh/'


#Units: cm and kg
def createScene(rootNode):

    rootNode.createObject('RequiredPlugin', name='SofaPython')
    rootNode.createObject('RequiredPlugin', name='SofaSparseSolver')
    rootNode.createObject('RequiredPlugin', name='SofaBoundaryCondition')
    rootNode.createObject('VisualStyle', displayFlags='showBehaviorModels showForceFields');

    rootNode.dt = 0.001;
    rootNode.gravity = [0., 0., -9810];

    rootNode.createObject('BackgroundSetting', color=[0, 0.168627, 0.211765, 1]);
    rootNode.createObject('OglSceneFrame', style="Arrows", alignment="TopRight");

    ###############################
    ## MECHANICAL MODEL
    ###############################

    robot = rootNode.createChild('robot')
    robot.createObject('EulerImplicitSolver');
    robot.createObject('SparseLDLSolver');
    ### Here you set the Hexahedron topology
    robot.createObject('MeshSTLLoader', name='loader', filename=path+'branch.stl');
    robot.createObject('SparseGridTopology', name="grid", src='@loader', n=[15, 15, 15]);

    robot.createObject('MechanicalObject', name='hexas', src="@grid");
    robot.createObject('UniformMass', totalMass=0.4);
    robot.createObject('HexahedronFEMForceField', poissonRatio=0.45,  youngModulus=600);

    robot.createObject('BoxROI', name='boxROI', box=[[-30, 80, 70, 30, 140, 130], [-130, -100, 70,  -60,  -20, 130],  [130, -100, 70,  60,  -20, 130]], drawBoxes=True);
    robot.createObject('FixedConstraint', indices="@boxROI.indices");

    return rootNode
